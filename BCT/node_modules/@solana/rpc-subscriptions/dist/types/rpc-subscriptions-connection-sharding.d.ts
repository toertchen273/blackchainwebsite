import type { RpcSubscriptionsTransport } from '@solana/rpc-subscriptions-spec';
type Config<TTransport extends RpcSubscriptionsTransport> = Readonly<{
    /**
     * You might like to open more subscriptions per connection than your RPC provider allows for.
     * Using the initial payload as input, return a shard key from this method to assign
     * subscriptions to separate connections. One socket will be opened per shard key.
     */
    getShard?: (payload: unknown) => string | symbol;
    transport: TTransport;
}>;
export declare function getWebSocketTransportWithConnectionSharding<TTransport extends RpcSubscriptionsTransport>({ getShard, transport, }: Config<TTransport>): TTransport;
export {};
//# sourceMappingURL=rpc-subscriptions-connection-sharding.d.ts.map