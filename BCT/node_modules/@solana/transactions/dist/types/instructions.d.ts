import { ITransactionWithSignatures } from './signatures.js';
import { BaseTransaction } from './types.js';
export declare function appendTransactionInstruction<TTransaction extends BaseTransaction>(instruction: TTransaction['instructions'][number], transaction: TTransaction | (ITransactionWithSignatures & TTransaction)): Omit<TTransaction, keyof ITransactionWithSignatures> | TTransaction;
export declare function appendTransactionInstructions<TTransaction extends BaseTransaction>(instructions: ReadonlyArray<TTransaction['instructions'][number]>, transaction: TTransaction | (ITransactionWithSignatures & TTransaction)): Omit<TTransaction, keyof ITransactionWithSignatures> | TTransaction;
export declare function prependTransactionInstruction<TTransaction extends BaseTransaction>(instruction: TTransaction['instructions'][number], transaction: TTransaction | (ITransactionWithSignatures & TTransaction)): Omit<TTransaction, keyof ITransactionWithSignatures> | TTransaction;
export declare function prependTransactionInstructions<TTransaction extends BaseTransaction>(instructions: ReadonlyArray<TTransaction['instructions'][number]>, transaction: TTransaction | (ITransactionWithSignatures & TTransaction)): Omit<TTransaction, keyof ITransactionWithSignatures> | TTransaction;
//# sourceMappingURL=instructions.d.ts.map