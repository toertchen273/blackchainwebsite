import { Address } from '@solana/addresses';
import { BaseTransaction, ITransactionWithFeePayer, ITransactionWithSignatures } from '@solana/transactions';
import { TransactionSigner } from './transaction-signer.js';
export interface ITransactionWithFeePayerSigner<TAddress extends string = string, TSigner extends TransactionSigner<TAddress> = TransactionSigner<TAddress>> {
    readonly feePayer: Address<TAddress>;
    readonly feePayerSigner: TSigner;
}
export declare function setTransactionFeePayerSigner<TFeePayerAddress extends string, TTransaction extends BaseTransaction>(feePayerSigner: TransactionSigner<TFeePayerAddress>, transaction: (ITransactionWithFeePayer<string> & ITransactionWithSignatures & TTransaction) | (ITransactionWithSignatures & TTransaction)): ITransactionWithFeePayerSigner<TFeePayerAddress> & Omit<TTransaction, keyof ITransactionWithSignatures>;
export declare function setTransactionFeePayerSigner<TFeePayerAddress extends string, TTransaction extends BaseTransaction>(feePayerSigner: TransactionSigner<TFeePayerAddress>, transaction: TTransaction | (ITransactionWithFeePayer<string> & TTransaction)): ITransactionWithFeePayerSigner<TFeePayerAddress> & TTransaction;
//# sourceMappingURL=fee-payer-signer.d.ts.map